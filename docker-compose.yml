version: '3.7'

services:
  web:
    # Берем Dockerfile из каталога app
    build: ./app
      # context: .

    # Запускаем тестовый сервер
    # v1
    # command: python manage.py runserver 0.0.0.0:8000
    # v2
    command: >
     sh -c "pytest -s --showlocals && python manage.py runserver 0.0.0.0:8000"
    # command: >
    #  sh -c "python manage.py wait_for_db &&
    #         pytest -s --showlocals &&
    #         python manage.py runserver 0.0.0.0:8000"
    # Открываем порт 8000 внутри и снаружи 8000
    ports:
      - 8000:8000
    # куда будут помещены данные из каталога app
    volumes:
      - ./app/:/usr/src/app/
    
    # Файл содержащий переменные для контейнера
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - celery

  # tests:
  #   # Tests from me
  #   build: ./app
  #   command: >
  #    sh -c "pytest"
  #   ports:
  #     - 5555:8000
  #   volumes:
  #     - ./app/:/usr/src/app/
  #   # try environment here
  #   environment:
  #     - DB_HOST=db  # POSTGRES_HOST from .env
  #     - DB_NAME=django_db  # POSTGRES_DB
  #     - DB_USER=django_user  # POSTGRES_USER
  #     - DB_PASS=django_password  # POSTGRES_PASSWORD
  #   env_file:
  #     - ./.env.dev
  #   depends_on:
  #     - db
  #     - redis
  #     - web
  #     - celery

  # makemigrations:  нам это не нужно, т.к. мы теперь все делаем в энтрипоинт..
  #   build: ./app
  #   volumes:
  #     - ./app/:/usr/src/app/
  #   command: >
  #    sh -c "python manage.py makemigrations"
  #   depends_on:
  #     - db
  db:
    # Образ и версия базы, которую мы будем использовать
    image: postgres:12.0-alpine
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    # restart: always  # ?
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    # user: django_user  # ?
    environment:
      # Учетные данные, которые можно будет переопределить
      - "POSTGRES_USER=django_user"
      - "POSTGRES_PASSWORD=django_password"
      - "POSTGRES_DB=django_db"
  redis:
    image: redis:alpine
  celery:
    build: ./app
    restart: always
    
    # build:
    #   context: .
    command: celery -A SUPPORT_API worker --loglevel=INFO
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db  # POSTGRES_HOST from .env
      - DB_NAME=django_db  # POSTGRES_DB
      - DB_USER=django_user  # POSTGRES_USER
      - DB_PASS=django_password  # POSTGRES_PASSWORD
    depends_on:
      - db
      - redis
      # - web
# это таки очень нужно. зачем?
volumes:
  postgres_volume: 
# кто-то пишет это:
# volumes:
#   pgdata: